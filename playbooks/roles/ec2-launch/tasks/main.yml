---
- name: Create an EC2 key
  ec2_key:
    name: "mykey"
    region: "{{aws_region}}"
  register: ec2_key

- name: save private key
  copy:
    content: "{{ ec2_key.key.private_key }}" 
    dest: "/root/ansible/roles/ec2-launch/mykey.pem"
    mode: 0600
    remote_src: True
  when: ec2_key.changed
   
- name: Create VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr_block }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: "present"
  register: my_vpc
- name: Set VPC ID in variable
  set_fact:
    vpc_id: "{{ my_vpc.vpc.id }}"

- name: Create Public Subnet [AZ-1]
  ec2_vpc_subnet:
    state: "present"
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ public_subnet_1_cidr }}"
    az: "{{ aws_region }}a"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    resource_tags:
      Name: "Public Subnet 1"
  register: my_public_subnet_az1
- name: Set Public Subnet ID in variable [AZ-1]
  set_fact:
    public_subnet_az1_id: "{{ my_public_subnet_az1.subnet.id }}"
- name: Create Private Subnet [AZ-1]
  ec2_vpc_subnet:
    state: "present"
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ private_subnet_1_cidr }}"
    az: "{{ aws_region }}c"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    resource_tags:
      Name: "Private Subnet 1"
  register: my_private_subnet_az1

- name: Set Private Subnet ID in variable [AZ-1]
  set_fact:
    private_subnet_az1_id: "{{ my_private_subnet_az1.subnet.id }}"
- name: Create Internet Gateway for VPC
  ec2_vpc_igw:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    state: "present"
  register: my_vpc_igw

- name: Set Internet Gateway ID in variable
  set_fact:
    igw_id: "{{ my_vpc_igw.gateway_id }}"
- name: Setup AWS CLI (1/3)
  shell: >
    aws configure set aws_access_key_id "{{ aws_access_key }}"

- name: Setup AWS CLI (2/3)
  shell: >
    aws configure set aws_secret_access_key "{{ aws_secret_key }}"

- name: Setup AWS CLI (3/3)
  shell: >
    aws configure set region {{ aws_region }}

- name: Set up public subnet route table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tags:
      Name: "Public"
    subnets:
      - "{{ public_subnet_az1_id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ igw_id }}"
- name: Set up private subnet route table [AZ-1]
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tags:
      Name: "Private 1"
    subnets:
      - "{{ private_subnet_az1_id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ igw_id }}"
- name: Create Main Security Group
  ec2_group:
    name: "Main_Security Group"
    description: "Main_security_Group"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    rules:
      - proto: "tcp"
        from_port: "22"
        to_port: "22"
        cidr_ip: "{{ my_ip }}/0"
      - proto: "tcp"
        from_port: "80"
        to_port: "80"
        cidr_ip: "{{ my_ip }}/0"
      - proto: "tcp"
        from_port: "443"
        to_port: "443"
        cidr_ip: "{{ my_ip }}/0"
      - proto: "tcp"
        from_port: "3306"
        to_port: "3306"
        cidr_ip: "{{ my_ip }}/0"
  register: my_main_sg
- name: Set Main SG ID
  set_fact:
    main_sg_id: "{{ my_main_sg.group_id }}"

- name: Ec2 - Ansible Server - Launch
  ec2:
    key_name: "mykey"
    instance_type: "{{ec2_instance_type}}"
    image: "{{ec2_image}}"
    vpc_subnet_id: "{{ public_subnet_az1_id }}"
    group_id: "{{ main_sg_id }}"
    assign_public_ip: True
    wait: true
    region: "{{aws_region}}"
    instance_tags: '{"Name":"{{ec2_ansible_Name}}","Environment":"{{ec2_tag_Environment}}"}'
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
  register: ec2
- name: See ec2 value
  debug: var=ec2
- name: Wait for Ansible Server SSH Service
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    delay: 120
  with_items: "{{ ec2.instances }}"
- name: Adding Ansible Server instance IP to host file
  copy:
    content: "[ansible]{{'\n'}}{{ item.public_ip }}"
    dest: /root/hosts
  with_items: "{{ ec2.instances }}"

- name: Ec2 - Apache One - Launch
  ec2:
    key_name: "mykey"
    instance_type: "{{ec2_instance_type}}"
    image: "{{ec2_image}}"
    user_data: "{{ lookup('file', '/root/create.sh') }}"
    vpc_subnet_id: "{{ private_subnet_az1_id }}"
    group_id: "{{ main_sg_id }}"
    assign_public_ip: yes
    wait: true
    region: "{{aws_region}}"
    instance_tags: '{"Name":"{{ec2_apache_Name}}","Environment":"{{ec2_tag_Environment}}"}'
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
  register: ec2
- name: See ec2 value
  debug: var=ec2
- name: Wait for Apache One SSH Service
  wait_for:
     timeout: 120
- name: Adding Apache One instance IP to host file
  lineinfile:
    dest: /root/hosts
    regexp: "^ansibleserver"
    insertbefore: "^[ansibleserver]"
    line: "[apache1]{{'\n'}}{{ item.private_ip }}"
  with_items: "{{ ec2.instances }}"

- name: Ec2 - MySQL - Launch
  ec2:
    key_name: "mykey"
    instance_type: "{{ec2_instance_type}}"
    image: "{{ec2_image}}"
    user_data: "{{ lookup('file', '/root/create.sh') }}"
    vpc_subnet_id: "{{ private_subnet_az1_id }}"
    group_id: "{{ main_sg_id }}"
    assign_public_ip: yes
    wait: true
    region: "{{aws_region}}"
    instance_tags: '{"Name":"{{ec2_mysql_Name}}","Environment":"{{ec2_tag_Environment}}"}'
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
  register: ec2
- name: See ec2 value
  debug: var=ec2
- name: Wait for Apache One SSH Service
  wait_for:
     timeout: 120
- name: Adding MySQL instance IP to host file
  lineinfile:
    dest: /root/hosts
    regexp: "^apache1"
    insertbefore: "^[apache1]{{'\n'}}"
    line: "[mysql]{{'\n'}}{{ item.private_ip }}"
  with_items: "{{ ec2.instances }}"
